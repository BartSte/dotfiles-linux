#!/usr/bin/env bash
set -euo pipefail

usage() {
    cat <<'EOF'
Usage: wpy [options] <command>

Run a Windows Python from WSL.

Env precedence:
  WINVENV   Path to a Windows venv (Linux or Windows path)
  WINPY     Path to a Windows python.exe

Options:
  --wpy-help   Show help and exit
  --wpy-path   Print resolved python.exe and exit

  --wpy-dir    Print directory of python.exe and exit
  --wpy-debug  Log debug to stderr
EOF

}

# ---------- flags ----------
debug=/dev/null
mode="run" # run | path | dir
argv=()

while [[ $# -gt 0 ]]; do
    case "$1" in
    --wpy-help)
        usage
        exit 0
        ;;
    --wpy-path) mode="path" ;;
    --wpy-dir) mode="dir" ;;
    --wpy-debug) debug=/dev/stderr ;;
    *) argv+=("$1") ;;

    esac
    shift
done

# ---------- guards ----------
if ! grep -qi microsoft /proc/version 2>/dev/null; then
    echo "Not running in WSL" >"$debug"
    exit 1
fi

# ---------- helpers ----------
is_win_path() { [[ "$1" =~ ^([A-Za-z]:\\|\\\\) ]]; }

to_win_path() {
    local p="$1"
    if is_win_path "$p"; then
        printf '%s' "$p"
    else
        wslpath -w -- "$p"
    fi
}

exists_win() {
    # Test existence of a Windows path via wslpath conversion
    local p="$1"
    local as_lin
    as_lin="$(wslpath -u -- "$p" 2>/dev/null)" || return 1
    [[ -e "$as_lin" ]]
}

venv_python_from() {
    local venv="$1"
    local venv_win
    venv_win="$(to_win_path "$venv")"
    printf '%s' "${venv_win%\\}\Scripts\python.exe"

}

# ---------- resolve python.exe ----------
py=""

if [[ -n "${WINVENV:-}" ]]; then
    echo "Using WINVENV: $WINVENV" >"$debug"
    cand="$(venv_python_from "$WINVENV")"
    echo "Candidate python.exe: $cand" >"$debug"
    if exists_win "$cand"; then

        py="$cand"
    else
        echo "Venv python not found: $cand" >"$debug"
    fi
fi

if [[ -z "$py" && -n "${WINPY:-}" ]]; then
    echo "Using WINPY: $WINPY" >"$debug"
    cand="$(to_win_path "$WINPY")"
    if exists_win "$cand"; then

        py="$cand"
    else
        echo "WINPY not found: $cand" >"$debug"

    fi
fi

[[ -n "$py" ]] || {
    echo "No python interpreter found (set WINVENV or WINPY)"
    exit 1
}

echo "Resolved python.exe: $py" >"$debug"

# ---------- output modes ----------
case "$mode" in
path)
    echo "$py"
    exit 0
    ;;
dir) # dirname for Windows path: convert to Linux, dirname, convert back
    d_lin="$(dirname "$(wslpath -u -- "$py")")"
    d_win="$(wslpath -w -- "$d_lin")"
    echo "$d_win"
    exit 0
    ;;
esac

# ---------- execute ----------
# Call Windows python.exe with original arguments
exec "$py" "${argv[@]}"
