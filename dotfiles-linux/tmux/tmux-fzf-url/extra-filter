#!/usr/bin/env bash

get_usage() {
    cat <<EOF
Usage: $0 [options]

This script is used to grep the follow text from stdin:

|--------------+----------------------------+-----------------------------------+----------------------|
| type         | pattern                    | example                           | windows path support |
| ----         | -------                    | -------                           | -------------------- |
| python error | File "{file}", line {line} | File "/home/user/foo.py", line 17 | yes                  |
| pytest error | {file}:{line}:             | test/test.py:123:                 | yes                  |
| clang error  | {file}:{line}:{column}:    | test/test.cpp:123:4:              | no                   |
|--------------+----------------------------+-----------------------------------+----------------------|

The types are detected base on their patterns. After the detection, they are
converted to the following convetion:

- {file}:{line}:{column}

options:
    -h, --help: show this help message and exit
EOF
}

if [[ $1 == '-h' || $1 == '--help' ]]; then
    get_usage
    exit 0
fi

RE_PYTEST_ERROR="^[a-zA-Z0-9\\\/\_\.\-]*\.py:[0-9]+:"
RE_PYTHON_ERROR="\"([a-zA-Z0-9\\\/\_\.]*\.py)\",\sline\s([0-9]+)"
RE_CLANG_ERROR=""
RE="($RE_PYTEST_ERROR)|($RE_CLANG_ERROR)|($RE_PYTHON_ERROR)"

################################################################################
# The convention for opening python files is: file:line:column. This is not the
# case for pytest errors. This function corrects that.
################################################################################
convert_python_error() {
    sed -E "s/$RE_PYTHON_ERROR/\1:\2:/g"
}

################################################################################
# The main function.
# Grep the all patterns from stdin. Later apply the other functions to the
# output.
################################################################################
main() {
    grep -Eoi $RE |
        convert_python_error
}

main
