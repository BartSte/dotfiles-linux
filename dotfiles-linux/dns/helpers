#!/bin/bash

################################################################################
# Reset DNS settings of systemd-resolved and NetworkManager to their defaults.
################################################################################
reset_dns() {
    _reset_systemd_resolved
    _reset_network_manager
}

_reset_systemd_resolved() {
    lg "Resetting systemd-resolved"
    sudo rm -f /etc/systemd/resolved.conf
    sudo touch /etc/systemd/resolved.conf
    sudo ln -sf /run/systemd/resolve/stub-resolv.conf /etc/resolv.conf
    sudo systemctl restart systemd-resolved
    lg "systemd-resolved reset completed."
}

_reset_network_manager() {
    lg "Resetting NetworkManager"
    sudo rm -f /etc/NetworkManager/NetworkManager.conf
    sudo touch /etc/NetworkManager/NetworkManager.conf
    echo -e "[main]\nplugins=keyfile" | sudo tee /etc/NetworkManager/NetworkManager.conf >/dev/null

    lg "Clearing per-connection DNS settings"
    nmcli -t -f NAME connection show | while IFS= read -r conn; do
        nmcli connection modify "$conn" ipv4.dns ""
        nmcli connection modify "$conn" ipv4.ignore-auto-dns no
    done

    sudo systemctl restart NetworkManager
    sudo systemd-resolve --flush-caches
    lg "NetworkManager reset completed."

    sudo systemctl disable --now systemd-resolved
}

################################################################################
# Protect the DNS settings by making the configuration files, and the sudoers
# file immutable. To make them mutable again, the root password is required,
# which can be set to a long and complex password.
################################################################################
protect_dns_settings() {
    sudo systemctl stop NetworkManager
    _protect_files
    _update_sudoers
    sudo systemctl start NetworkManager
}

################################################################################
# Protect the DNS configuration files by making them immutable.
################################################################################
_protect_files() {
    lg "Protecting DNS configuration files"
    sudo chattr +i /etc/resolv.conf
    sudo chattr +i /etc/NetworkManager/NetworkManager.conf
    sudo chattr +i /etc/sudoers
    lg "DNS configuration files protected."
}

################################################################################
# A Cmnd_Alias is defined that requires the root password to execute the chattr
# command on /etc/resolv.conf and /etc/NetworkManager/NetworkManager.conf. This
# way, the DNS settings are immutable unless the user has the root password,
# which can be set to a long and complex password.
################################################################################
_update_sudoers() {
    # Define the lines to append
    lines="
# Protect DNS settings by requiring the root password
Cmnd_Alias DNS_PROTECTED = /bin/chattr -i /etc/resolv.conf, /bin/chattr -i /etc/NetworkManager/NetworkManager.conf
Defaults!DNS_PROTECTED rootpw"

    # File to modify
    sudoers_file="/etc/sudoers"

    # Check if the lines already exist
    if ! sudo grep -q "Cmnd_Alias DNS_PROTECTED" "$sudoers_file"; then
        # Append the lines if not found
        echo "$lines" | sudo tee -a "$sudoers_file" >/dev/null
        lg "Lines successfully added to sudoers file."
    else
        lg "Lines already exist in the sudoers file. No changes made."
    fi

    # Validate the sudoers file
    sudo visudo -c
    if [ $? -eq 0 ]; then
        lg "Sudoers file validated successfully."
    else
        lg "Error in the sudoers file. Please check it."
    fi
}
