#!/usr/bin/env bash

set -euo pipefail

usage="Usage: update-blocklist

Update the IP blocklist by resolving the domains in /etc/blocked-domains.txt and
adding the IPs to an ipset. Then add an iptables rule to drop all packets
destined for the IPs in the ipset.

options:
    -h, --help      Show this help message."

# TODO: whhat is a cool idea is to cache my domain-to-ip mappings using dnsmasq.
# Then repeated DNS lookups will be faster. Only the ones that cannot be
# resolved from the cache will be resolved from the internet.

while [[ $# -gt 0 ]]; do
    case "$1" in
    -h | --help)
        echo "$usage"
        exit 0
        ;;
    *)
        echo "Unknown option: $1"
        exit 1
        ;;
    esac
done

URL="https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/porn-only/hosts"
BLOCKLIST="/etc/blocked-domains.txt"
TMP_IPS="/tmp/blocked-ips.txt"
IPSET_NAME="blocked"

echo "Downloading the blocklist..." >&2
curl -sSL "$URL" |
    awk '/^0\.0\.0\.0/ {print $2}' >"$BLOCKLIST"

echo "Resolving domains (parallel)..." >&2
rm -f "$TMP_IPS"
touch "$TMP_IPS"
grep -vE '^#|^$' "$BLOCKLIST" |
    parallel --jobs 8 --bar --eta --no-notice 'dig +short A {} 2>/dev/null' \
        >>"$TMP_IPS"

echo "Removing duplicates and sorting..." >&2
sort -u -o "$TMP_IPS" "$TMP_IPS"

echo "Creating/flushing the ipset..." >&2
ipset destroy "$IPSET_NAME" 2>/dev/null || true
ipset create "$IPSET_NAME" hash:ip family inet hashsize 1048576 maxelem 2000000

echo "Adding IPs to ipset..." >&2
# Parallel add to speed up insertion
cat "$TMP_IPS" | parallel --jobs 8 --bar --eta --no-notice "ipset add $IPSET_NAME {} -exist"

echo "Adding iptables rule if missing..." >&2
iptables -C OUTPUT -m set --match-set "$IPSET_NAME" dst -j DROP 2>/dev/null ||
    iptables -A OUTPUT -m set --match-set "$IPSET_NAME" dst -j DROP

echo "Done." >&2
